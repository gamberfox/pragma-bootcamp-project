plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	//id 'org.openapi.generator' version '7.0.1'
}

group = 'com.emazon'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springAiVersion', "1.0.0-M1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	testImplementation 'org.junit.jupiter:junit-jupiter-engine'
	testImplementation 'org.mockito:mockito-core:5.0.0'  // Use the latest version
	testImplementation 'org.mockito:mockito-junit-jupiter:5.0.0'  // For JUnit 5 integration
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jacoco {
	toolVersion = '0.8.8'  // Use the latest version
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.4"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

test{
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

//when the project finishes, the report will be run
jacocoTestReport {
	dependsOn test  // Ensure tests are run before generating the report
	reports {
		xml.required.set(true)
		html.required.set(true)
	}
}
